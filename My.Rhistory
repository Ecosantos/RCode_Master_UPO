library(ape); library(ade4)
#-------------------------------------------------------------------
# Plot of different levels of inertia
x1 <- c(1,3,5,7,9,12,14,18,19)
y1 <- c(2,4,2,5,11,9,17,20,21)
x2 <- c(1,3,5,7,9,12,14,18,19)
y2 <- c(2,2,1,4,5,7,7,9,9)
plot(x1,y1,type="n",xlab="Tiempo",ylab="Rasgo fenotípico")
points(x1,y1)
abline(lm(y1~x1))
scatterutil.ellipse(x1, y1, rep(c(1,0), c(10,10)), cell = 1.5,
ax = F)
points(x2,y2,pch=19)
abline(lm(y2~x2), col="red")
scatterutil.ellipse(x2, y2, rep(c(1,0),c(10,10)), cell= 1.5,
ax= F)
#-------------------------------------------------------------------
# Simular un modelo Ornstein-Uhlenbeck
# Sylvia data (Paradis 2006; Bohning-Gaese et al. 2003)
x <- paste("AJ5345", 26:49, sep="")   # Accesion numbers
x <- c("Z73494", x)
sylvia.seq <- read.GenBank(x) # Read sequences from GenBank
write.dna(sylvia.seq,"sylvia.fas",format="fasta")  # Write in fasta
# format
taxa.sylvia <- attr(sylvia.seq,"species")
names(taxa.sylvia) <- names(sylvia.seq)
sylvia.seq[c(1,24)]
taxa.sylvia[1]<-"Sylvia_atricapilla"
taxa.sylvia[24]<-"Sylvia_abyssinica"
#-------------------------------------------------------------------
# Contrasts
data(palm)
?palm
# Variables in palm$traits:
# h: height in meter (squared transform)
# vfruit: fruit volume in mm^3 (log-transform)
# vgrain: seed volume in mm^3 (log-transform)
# aire: spatial distribution area (km^2)
# alti: maximum altitude in meter (logged transform)
palm.phy <- newick2phylog(palm$tre)
radial.phylog(palm.phy,clabel.l=1.25)
tt<-cbind.data.frame(scalewt((palm$traits[,c(2,4:7)])))
table.phylog(tt, palm.phy, clabel.r = 0.7, f = 0.4)
# Labelling the nodes
trape<-read.tree(text="((Homo,Pan),Gorilla);")
plot(trape,x.lim=c(-0.1,2.2))
nodelabels(c("6.4 Ma","5.4 Ma"),frame="c",bg="white")
bs.pars<-scan()
bs.pars<-scan()
bs.pars
sylvia.clus <- clustal(sylvia.seq)
library(phyloch)
sylvia.maff <- mafft(sylvia.seq)
library(ape)
x <- paste("AJ5345", 26:49, sep = "")
x <- c("Z73494", x)
sylvia.seq <- read.GenBank(x)
sylvia.clus <- clustal(sylvia.seq)
taxa.sylvia <- attr(sylvia.seq, "species")
names(taxa.sylvia) <- names(sylvia.seq)
rm(sylvia.seq)
taxa.sylvia[1] <- "Sylvia_atricapilla"
taxa.sylvia[24] <- "Sylvia_abyssinica"
sylvia.eco <- read.table("sylvia_data.txt")
str(sylvia.eco)
sylvia.clus <- clustal(sylvia.seq)
sylvia.seq <- read.GenBank(x)
sylvia.clus <- clustal(sylvia.seq)
rownames(sylvia.eco)
save(sylvia.clu, taxa.sylvia, sylvia.eco,
file = "sylvia.RData")
syl.K80 <- dist.dna(sylvia.seq.ali, pairwise.deletion = TRUE)
syl.F84 <- dist.dna(sylvia.seq.ali, model = "F84", p = TRUE)
syl.TN93 <- dist.dna(sylvia.seq.ali, model = "TN93", p = TRUE)
syl.GG95 <- dist.dna(sylvia.seq.ali, model = "GG95", p = TRUE)
sylvia.seq.ali<-read.table("sylvia.aln")
syl.K80 <- dist.dna(sylvia.seq.ali, pairwise.deletion = TRUE)
cat("((((Homo:0.21,Pongo:0.21):0.28,",
"Macaca:0.49):0.13,Ateles:0.62):0.38,Galago:1.00);",
file = "ex.tre", sep = "\n")
tree.primates <- read.tree("ex.tre")
library(ape); library(ade4)
bm.prim <- corBrownian(phy=tree.primates)
DF.prim <- data.frame(body,longevity)
m1 <- gls(longevity~body,
correlation=bm.prim,data=DF.prim)
summary(m1)
library(ape)
library(ade4)
tree.primates <- read.tree(text="((((Homo:0.21,Pongo:0.21):0.28,Macaca:0.49):0.13,Ateles: 0.62):0.38,Galago:1.00);")
body <- c(4.09434,3.61092,2.37024,2.02815,-1.46968)
longevity <- c(4.74493,3.3322,3.3673,2.89037,2.30259)
names(body)<-names(longevity)<-c("Homo","Pongo","Macaca","Ateles","Galago")
bm.prim <- corBrownian(phy=tree.primates)
DF.prim <- data.frame(body,longevity)
m1 <- gls(longevity~body,
correlation=bm.prim,data=DF.prim)
summary(m1)
# Ornstein-Uhlenbeck
ou.prim <- corMartins(1,tree.primates)
m2 <- gls(longevity~body,
correlation=ou.prim,data=DF.prim)
summary(m2)
# GEE-Generalized Estimating Equations
compar.gee(longevity~body,
phy= tree.primates)
plot(body,longevity)
v <- varcomp(m, TRUE, TRUE)
m <- lme(log10(SW) ~ 1, random = ~ 1|Order/SuperFamily/Family/Genus, data=carnivora)
data(carnivora)
names(carnivora)
m <- lme(log10(SW) ~ 1, random = ~ 1|Order/SuperFamily/Family/Genus, data=carnivora)
v <- varcomp(m, TRUE, TRUE)
plot(v)
barplot(v)
v
str(v)
barplot(as.vector(v)
)
?barplot
barplot(v,beside=F)
barplot(as.vector(v),beside=F)
plot(v)
barplot(as.vector(v),beside=F)
barplot(as.vector(v),beside=FALSE)
v
barplot(as.vector(v),beside=FALSE,cex.names=0.5)
barplot(as.vector(v),beside=FALSE,cex.names=0.5)
plot(v)
barplot(as.vector(v),beside=FALSE,
names-arg=c("Order","SuperFamily","Family","Genus","Within"),
barplot(as.vector(v),beside=FALSE,
names.arg=c("Order","SuperFamily","Family","Genus","Within"),
cex.names=0.5)
barplot(as.vector(v),beside=FALSE,
names.arg=c("Order","SuperFamily","Family","Genus","Within"))
as.vector(v)
tpg<-newick2phylog(write.tree(tree.primates))
variance.phylog(tpg,body)
library(vegan)
data(BCI)
# Shannon–Weaver Simpson
H <- diversity(BCI)  # H'= -Sum pi*log pi
H <- diversity(BCI,index = "simpson")  # D2= 1-Sum pi^2
H
data(BCI)
i <- sample(nrow(BCI), 9)
mod <- renyi(BCI[i,])
plot(mod)
mod <- renyiaccum(BCI[i,])
plot(mod, as.table=TRUE, col = c(1, 2, 2))
data(BCI)
i <- sample(nrow(BCI), 9)
mod <- renyi(BCI[i,])
plot(mod)
rowSums(BCI); specnumber(BCI)    # Esta S relacionado con Nind?
plot(rowSums(BCI),specnumber(BCI))
Srar <- rarefy(BCI, min(rowSums(BCI)))
# Acumulacion de especies y estimadores asintoticos
sac <- specaccum(BCI)
plot(sac, ci.type = "polygon", ci.col = "yellow")
sac2<-specaccum(BCI,"random")
plot(sac, ci.type="poly", col="blue", lwd=2, ci.lty=0, ci.col="lightblue")
boxplot(sac2, col="yellow", add=TRUE, pch="+") # Solo para "random"
sac2
# Otra forma
BCI$site.totals <- apply(BCI,1,sum)   # Totals by plot
Accum.1<- accumresult(BCI, y= BCI, scale='site.totals', method='exact')
Accum.1
accumplot(Accum.1, ci.type="poly", col="blue",
lwd=2, ci.lty=0, ci.col="lightblue",type="n") # With CI intervals
accumplot(Accum.1) # Simple plot
library(ade4)
library(BiodiversityR)
BCI$site.totals <- apply(BCI,1,sum)   # Totals by plot
Accum.1<- accumresult(BCI, y= BCI, scale='site.totals', method='exact')
Accum.1
accumplot(Accum.1, ci.type="poly", col="blue",
lwd=2, ci.lty=0, ci.col="lightblue",type="n") # With CI intervals
accumplot(Accum.1) # Simple plot
accumplot(Accum.1, ci.type="poly", col="blue",
lwd=2, ci.lty=0, ci.col="lightblue",type="n") # With CI intervals
specpool(BCI)
estimateR(BCI[k, ]) # Donde k es cualquiera de los plots 1 ha
estimateR(BCI[12, ])
library(ecespa); library(spatial); library(spatstat); library(gstat)
library(sgeostat); library(MASS)
data(fig1,fig2,fig3)
par(mfrow=c(1,3))
plot(fig1, pch=19); plot(fig2, pch =19); plot(fig3, pch=19)
plot(fig1, pch=19, main= "Random"); plot(fig2, pch =19,
main= "Clumped"); plot(fig3, pch=19, main= "Regular")
par (mfrow=c(1,1))
# Puntos marcados
fig4<-fig1[1:40,]   # Tomo 40 coordenadas de Fig 1
m<- round(rnorm(40, mean=100, sd=60),1)  # Hago 40 marcas al azar
fig4<-cbind(fig4,m) # Lo junto
fig4.ppp <- ppp(fig4$x, fig4$y, c(0,100), c(0,100), marks=fig4$m)
plot(fig4.ppp)
# Plot con transparencia
plot(fig4.ppp, bg = rgb(0, 0, 1, 0.2), pch = 16,lty=0,frame.plot=T)
#---------- EJEMPLO
# Distancia entre dos puntos
plot(fig1, pch=19)
dist<-function(x1, y1, x2, y2)  sqrt((x2 - x1)^2 + (y2 - y1)^2)
# Function to estimate nearest neighbor for n points and draw lines
# after plotting. Substitue 100 by no. of points
# Usamos fig1, que tiene 87 puntos.
r<-numeric(87)
nn<-numeric(87)
d<-numeric(87)
for (i in 1: 87) {
d<-0
for (k in 1: 87) d[k]<-dist(fig1$x[i],fig1$y[i],fig1$x[k],fig1$y[k])
r[i]<-min(d[-i])
nn[i]<-which(d==min(d[-i]))
}
# Dibujamos las lineas
for (i in 1: 87) lines(c(fig1$x[i],fig1$x[nn[i]]),c(fig1$y[i],
fig1$y[nn[i]]))   # draw the lines
# Patrones ppp
x <- c(1.94,0.32,1.74,0.64,0.12,1.44,0.29,0.74,0.32,1.35,1.23,0.53,0.98,0.96,0.91,1.28,1.24,0.14,1.75,0.24,0.45,0.94,1.22,1.60,0.62)
y <- c(0.40,0.70,0.91,0.92,0.13,0.92,0.72,0.15,0.78,0.59,0.02,0.70,0.75,0.33,0.52,0.75,0.19,0.32,0.87,0.13,0.63,0.08,0.72,0.67,0.96)
m<- c(9.2,3.2,14.4,12.3,2.5,6.1,2.7,10.4,10.2,0.4,20.9,10.4,25.7,7.7,13.7,10.4,8.1,9.7,0.3,0.2,1.9,11.5,6.1,16.8,36.2)
Q <- ppp(x, y, c(0, 2), c(0, 1), marks = m)
Q
plot(Q)
m <- sample(c("Yes", "No"), 25, replace = TRUE)
m <- factor(m)
YN <- ppp(x, y, c(0, 2), c(0, 1), marks = m)
YN
plot(YN)
den <- density(bei, sigma = 70)
plot(den)
plot(bei, add = TRUE, cex = 0.5)
